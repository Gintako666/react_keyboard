{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","eventKeyBord","e","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAQaA,EAAb,4MACEC,MAEK,CACHC,IAAK,IAJT,EAeEC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,IAAKE,EAAEF,OAhB3B,uDAOE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,gBAR5C,kCAWE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,gBAZ/C,oBAmBE,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACW,KAARR,EACI,0BADJ,kCAE+BA,WA3B1C,GAAyBS,IAAMC,W,MCH/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.440c441c.chunk.js","sourcesContent":["import React from 'react';\n\n// export const App: React.FC = () => (\n//   <div className=\"App\">\n//     <p className=\"App__message\">The last pressed key is [Enter]</p>\n//   </div>\n// );\n\nexport class App extends React.Component {\n  state: Readonly<{\n    key: string,\n  }> = {\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.eventKeyBord);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.eventKeyBord);\n  }\n\n  eventKeyBord = (e: KeyboardEvent) => {\n    this.setState({ key: e.key });\n  };\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {key === ''\n            ? ('Nothing was pressed yet')\n            : (`The last pressed key is ${key}`)}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}